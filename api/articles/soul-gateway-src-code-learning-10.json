{"title":"soul_gateway_src_code_learning_10","slug":"soul-gateway-src-code-learning-10","date":"2021-01-25T16:31:42.000Z","updated":"2021-01-25T18:14:59.204Z","comments":true,"excerpt":"","content":"<p>SOUL admin/bootstrap cluster</p>\n<p>模拟soul 网关集群部署, 启动2个admin, 2个bootstrap</p>\n<p><img src=\"/2021/01/26/soul-gateway-src-code-learning-10/00parallel_run.jpg\" alt=\"img\"></p>\n<p>如上开启配置可以启动多个实例,也可以打包后通过java -jar启动</p>\n<p>在<code>soul-bootstrap</code>的<code>application.yml</code>配置刚才启动的<code>soul-admin</code>的 url</p>\n\n    <pre><code class=\"lang-yaml\">sou<span class=\"hljs-variable\">l:</span>\n    <span class=\"hljs-keyword\">sync</span>:\n        websocket :\n             url<span class=\"hljs-variable\">s:</span> <span class=\"hljs-keyword\">w</span><span class=\"hljs-variable\">s:</span>//localhos<span class=\"hljs-variable\">t:9095</span>/websocket,<span class=\"hljs-keyword\">w</span><span class=\"hljs-variable\">s:</span>//localhos<span class=\"hljs-variable\">t:9096</span>/websocket\n</code></pre>\n<p>启动后分别打开 <a href=\"http://localhost:9095/#/plug/divide\" target=\"_blank\" rel=\"external\">http://localhost:9095/#/plug/divide</a>, <a href=\"http://localhost:9096/#/plug/divide\" target=\"_blank\" rel=\"external\">http://localhost:9096/#/plug/divide</a>,可以看到目前都没有数据</p>\n<p><img src=\"/2021/01/26/soul-gateway-src-code-learning-10/01no_data_admins.png\" alt=\"img\"></p>\n<p>启动一个soul-examples-http, 具体可参考前面的文章</p>\n\n    <pre><code class=\"lang-bash\"><span class=\"hljs-variable\">$curl</span> 127.0.0.1:9195/http/order/findById\\?<span class=\"hljs-attribute\">id</span>=1\n{<span class=\"hljs-string\">\"id\"</span>:<span class=\"hljs-string\">\"1\"</span>,<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"hello world findById\"</span>}%\n<span class=\"hljs-variable\">$curl</span> 127.0.0.1:9196/http/order/findById\\?<span class=\"hljs-attribute\">id</span>=1\n{<span class=\"hljs-string\">\"id\"</span>:<span class=\"hljs-string\">\"1\"</span>,<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"hello world findById\"</span>}%\n</code></pre>\n<p>这时候, 我们看到9195, 9196都可以访问代理到,实际上我们只是因为刚启动的配置注册到了admin:9196, 而后被同步到了配置了两个admin的websocket同步的9195和9196 bootstrap, 那么我好奇的是如果这个时候在启动一个example, 修改接口路径, 同步到9096,那么我们bootstrap得到的是合集还是会被覆盖呢, 接下来操作</p>\n<p>修改 soul-examples/soul-examples-http/src/main/resources/application.yml</p>\n\n    <pre><code class=\"lang-yaml\"><span class=\"hljs-attribute\">server</span>:\n  <span class=\"hljs-attribute\">port</span>: <span class=\"hljs-number\">8189</span>\n  <span class=\"hljs-attribute\">address</span>: <span class=\"hljs-number\">0.0</span>.<span class=\"hljs-number\">0.0</span>\n<span class=\"hljs-attribute\">soul</span>:\n  <span class=\"hljs-attribute\">http</span>:\n    <span class=\"hljs-attribute\">adminUrl</span>: <span class=\"hljs-attribute\">http</span>:<span class=\"hljs-comment\">//localhost:9096</span>\n</code></pre>\n<p>soul-examples/soul-examples-http/src/main/java/org/dromara/soul/examples/http/controller/HttpTestController.java</p>\n<p>将路径改为</p>\n\n    <pre><code class=\"lang-java\"><span class=\"hljs-variable\">@GetMapping</span>(<span class=\"hljs-string\">\"/findById\"</span>)\n<span class=\"hljs-variable\">@SoulSpringMvcClient</span>(path = <span class=\"hljs-string\">\"/9016FindById\"</span>, desc = <span class=\"hljs-string\">\"Find by id\"</span>)\npublic OrderDTO findById(<span class=\"hljs-variable\">@RequestParam</span>(<span class=\"hljs-string\">\"id\"</span>) final String id) {}\n</code></pre>\n<p>启动后做下</p>\n<p><img src=\"/2021/01/26/soul-gateway-src-code-learning-10/02diff_admin_selector.jpg\" alt=\"img\"></p>\n<p>可以看到 8188 和 8189 examples-http分别注册到了 9095和9096admin, 接下来测试下</p>\n\n    <pre><code class=\"lang-bash\"><span class=\"hljs-variable\">$url</span> 127.0.0.1:9196/http/order/findById\\?<span class=\"hljs-attribute\">id</span>=1\n{<span class=\"hljs-string\">\"id\"</span>:<span class=\"hljs-string\">\"1\"</span>,<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"hello world findById\"</span>}%\n<span class=\"hljs-variable\">$curl</span> 127.0.0.1:9195/http/order/findById\\?<span class=\"hljs-attribute\">id</span>=1\n{<span class=\"hljs-string\">\"id\"</span>:<span class=\"hljs-string\">\"1\"</span>,<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"hello world findById\"</span>}%\n<span class=\"hljs-variable\">$curl</span> 127.0.0.1:9195/http/order/9016FindById\\?<span class=\"hljs-attribute\">id</span>=1\n{<span class=\"hljs-string\">\"code\"</span>:-102,<span class=\"hljs-string\">\"message\"</span>:<span class=\"hljs-string\">\"Rule not found!\"</span>,<span class=\"hljs-string\">\"data\"</span>:null}%\n<span class=\"hljs-variable\">$curl</span> 127.0.0.1:9196/http/order/9016FindById\\?<span class=\"hljs-attribute\">id</span>=1\n{<span class=\"hljs-string\">\"code\"</span>:-102,<span class=\"hljs-string\">\"message\"</span>:<span class=\"hljs-string\">\"Rule not found!\"</span>,<span class=\"hljs-string\">\"data\"</span>:null}%\n</code></pre>\n<p>可以看到, 我们新启动的8189 examples-http并没有对任意一个bootstrap生效, 可以猜测只有第一个配置的url生效了</p>\n<p>而实际上我们看到 soul-sync-data-center/soul-sync-data-websocket/src/main/java/org/dromara/soul/plugin/sync/data/websocket/WebsocketSyncDataService.java</p>\n\n    <pre><code class=\"lang-java\"><span class=\"hljs-keyword\">for</span> (String url : urls) {\n            try {\n                clients.<span class=\"hljs-builtin-name\">add</span>(new SoulWebsocketClient(new URI(url), Objects.requireNonNull(pluginDataSubscriber), metaDataSubscribers, authDataSubscribers));\n            } catch (URISyntaxException e) {\n                log.<span class=\"hljs-builtin-name\">error</span>(<span class=\"hljs-string\">\"websocket url({}) is error\"</span>, url, e);\n            }\n        }\n        try {\n            <span class=\"hljs-keyword\">for</span> (WebSocketClient<span class=\"hljs-built_in\"> client </span>: clients) {\n                boolean success = client.connectBlocking(3000, TimeUnit.MILLISECONDS);\n                <span class=\"hljs-keyword\">if</span> (success) {\n                    log.<span class=\"hljs-builtin-name\">info</span>(<span class=\"hljs-string\">\"websocket connection is successful.....\"</span>);\n                } <span class=\"hljs-keyword\">else</span> {\n                    log.<span class=\"hljs-builtin-name\">error</span>(<span class=\"hljs-string\">\"websocket connection is error.....\"</span>);\n                }\n                executor.scheduleAtFixedRate(() -&gt; {\n                    try {\n                        <span class=\"hljs-keyword\">if</span> (client.isClosed()) {\n                            boolean reconnectSuccess = client.reconnectBlocking();\n                            <span class=\"hljs-keyword\">if</span> (reconnectSuccess) {\n                                log.<span class=\"hljs-builtin-name\">info</span>(<span class=\"hljs-string\">\"websocket reconnect is successful.....\"</span>);\n                            } <span class=\"hljs-keyword\">else</span> {\n                                log.<span class=\"hljs-builtin-name\">error</span>(<span class=\"hljs-string\">\"websocket reconnection is error.....\"</span>);\n                            }\n                        }\n                    } catch (InterruptedException e) {\n                        log.<span class=\"hljs-builtin-name\">error</span>(<span class=\"hljs-string\">\"websocket connect is error :{}\"</span>, e.getMessage());\n                    }\n                }, 10, 30, TimeUnit.SECONDS);\n            }\n</code></pre>\n<p>明显所有的client都会同步数据,  这里留下一个TODO:看看为什么会产生这种现象</p>\n","categories":[],"tags":[{"name":"SOUL","path":"api/tags/SOUL.json"}]}