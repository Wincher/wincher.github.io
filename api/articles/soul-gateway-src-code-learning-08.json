{"title":"soul_gateway_src_code_learning_08","slug":"soul-gateway-src-code-learning-08","date":"2021-01-22T16:13:04.000Z","updated":"2021-01-24T17:24:24.074Z","comments":true,"excerpt":"","content":"<h3 id=\"SOUL-Admin-amp-网关-Http长轮询-数据同步\"><a href=\"#SOUL-Admin-amp-网关-Http长轮询-数据同步\" class=\"headerlink\" title=\"SOUL Admin &amp; 网关 Http长轮询 数据同步\"></a>SOUL Admin &amp; 网关 Http长轮询 数据同步</h3><p>书接上回, 使用Http长轮询, 数据同步,</p>\n<p>soul-admin/src/main/resources/application.yml</p>\n<pre><code class=\"yaml\">soul:\n  sync:\n#    websocket:\n#      enabled: true\n#    zookeeper:\n#        url: localhost:2181\n#        sessionTimeout: 5000\n#        connectionTimeout: 2000\n      http:\n        enabled: true\n</code></pre>\n<p>soul-bootstrap/src/main/resources/application-local.yml, 同理</p>\n<pre><code class=\"yaml\">soul :\n    sync:\n#        websocket :\n#             urls: ws://localhost:9095/websocket\n#        zookeeper:\n#             url: localhost:2181\n#             sessionTimeout: 5000\n#             connectionTimeout: 2000\n        http:\n             url : http://localhost:9095\n</code></pre>\n<p>soul-bootstrap/pom.xml  已经添加了</p>\n<pre><code class=\"xml\">&lt;!--soul data sync start use http--&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.dromara&lt;/groupId&gt;\n    &lt;artifactId&gt;soul-spring-boot-starter-sync-data-http&lt;/artifactId&gt;\n    &lt;version&gt;${project.version}&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<p>分别启动 soul-admin, soul-bootstrap, 注意目前使用http长连接,  bootstrap启动前需要soul-admin已经启动完成, 不然会由于无法通过http连接admin而无法启动,</p>\n<p>接下来正常启动我们看到soul-bootstrap log</p>\n<pre><code class=\"bash\">2021-01-23 00:36:08.279  INFO 62417 --- [           main] o.d.s.s.data.http.HttpSyncDataService    : request configs: [http://localhost:9095/configs/fetch?groupKeys=APP_AUTH&amp;groupKeys=PLUGIN&amp;groupKeys=RULE&amp;groupKeys=SELECTOR&amp;groupKeys=META_DATA]\n2021-01-23 00:36:08.562  INFO 62417 --- [onPool-worker-3] o.d.s.s.d.h.refresh.AppAuthDataRefresh   : clear all appAuth data cache\n2021-01-23 00:36:08.570  INFO 62417 --- [           main] o.d.s.s.data.http.HttpSyncDataService    : get latest configs: [{&quot;code&quot;:200,&quot;message&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;META_DATA&quot;:{&quot;md5&quot;:&quot;f96c44af66298be2e76a6b0a55a7b629&quot;,&quot;lastModifyTime&quot;:1611333355313,&quot;data&quot;:[{&quot;id&quot;:&quot;1351785376513667072&quot;,&quot;appName&quot;:&quot;springCloud-test&quot;,&quot;contextPath&quot;:null,&quot;path&quot;:&quot;/springcloud/**&quot;,&quot;rpcType&quot;:&quot;springCloud&quot;,&quot;serviceName&quot;:&quot;springCloud-test&quot;,&quot;methodName&quot;:&quot;/springcloud&quot;,&quot;parameterTypes&quot;:null,&quot;rpcExt&quot;:null,&quot;enabled&quot;:true},{&quot;id&quot;:&quot;1351837754670669824&quot;,&quot;appName&quot;:&quot;sofa&quot;,&quot;contextPath&quot;:null,&quot;path&quot;:&quot;/sofa/insert&quot;,&quot;rpcType&quot;:&quot;sofa&quot;,&quot;serviceName&quot;:&quot;org.dromara.soul.examples.dubbo.api.service.DubboTestService&quot;,&quot;methodName&quot;:&quot;insert&quot;,&quot;parameterTypes&quot;:&quot;org.dromara.soul.examples.dubbo.api.entity.DubboTest&quot;,&quot;rpcExt&quot;:&quot;{\\&quot;loadbalance\\&quot;:\\&quot;hash\\&quot;,\\&quot;retries\\&quot;:3,\\&quot;timeout\\&quot;:-1}&quot;,&quot;enabled&quot;:true},{&quot;id&quot;:&quot;1351837763067666432&quot;,&quot;appName&quot;:&quot;sofa&quot;,&quot;contextPath&quot;:null,&quot;path&quot;:&quot;/sofa/findAll&quot;,&quot;rpcType&quot;:&quot;sofa&quot;,&quot;serviceName&quot;:&quot;org.dromara.soul.examples.dubbo.api.service.DubboTestService&quot;,&quot;methodName&quot;:&quot;findAll&quot;,&quot;parameterTypes&quot;:null,&quot;rpcExt&quot;:&quot;{\\&quot;loadbalance\\&quot;:\\&quot;hash\\&quot;,\\&quot;retries\\&quot;:3,\\&quot;timeout\\&quot;:-1}&quot;,&quot;enabled&quot;:true},{&quot;id&quot;:&quot;1351837768541233152&quot;,&quot;appName&quot;:&quot;sofa&quot;,&quot;contextPath&quot;:null,&quot;path&quot;:&quot;/sofa/findById&quot;,&quot;rpcType&quot;:&quot;sofa&quot;,&quot;serviceName&quot;:&quot;org.dromara.soul.examples.dubbo.api.service.DubboTestService&quot;,&quot;methodName&quot;:&quot;findById&quot;,&quot;parameterTypes&quot;:&quot;java.lang.String&quot;,&quot;rpcExt&quot;:&quot;{\\&quot;loadbalance\\&quot;:\\&quot;hash\\&quot;,\\&quot;retries\\&quot;:3,\\&quot;timeout\\&quot;:-1}&quot;,&quot;enabled&quot;:true}]},&quot;SELECTOR&quot;:{&quot;md5&quot;:&quot;55e041ea36b518946ef09f9ed5d16ffe&quot;,&quot;lastModifyTime&quot;:1611333355190,&quot;data&quot;:[{&quot;id&quot;:&quot;1351785378313023488&quot;,&quot;pluginId&quot;:&quot;8&quot;,&quot;pluginName&quot;:&quot;springCloud&quot;,&quot;name&quot;:&quot;/springcloud&quot;,&quot;matchMode&quot;:0,&quot;type&quot;:1,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;continued&quot;:true,&quot;handle&quot;:&quot;{\\&quot;serviceId\\&quot;:\\&quot;springCloud-test\\&quot;}&quot;,&quot;conditionList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;match&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/springcloud/**&quot;}]},{&quot;id&quot;:&quot;1351837756520357888&quot;,&quot;pluginId&quot;:&quot;11&quot;,&quot;pluginName&quot;:&quot;sofa&quot;,&quot;name&quot;:&quot;/sofa&quot;,&quot;matchMode&quot;:0,&quot;type&quot;:1,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;continued&quot;:true,&quot;handle&quot;:&quot;sofa&quot;,&quot;conditionList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;match&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/sofa/**&quot;}]}]},&quot;PLUGIN&quot;:{&quot;md5&quot;:&quot;5e9a7365763848a4498b445a5a35c0b4&quot;,&quot;lastModifyTime&quot;:1611333351898,&quot;data&quot;:[{&quot;id&quot;:&quot;1&quot;,&quot;name&quot;:&quot;sign&quot;,&quot;config&quot;:null,&quot;role&quot;:1,&quot;enabled&quot;:false},{&quot;id&quot;:&quot;10&quot;,&quot;name&quot;:&quot;sentinel&quot;,&quot;config&quot;:null,&quot;role&quot;:1,&quot;enabled&quot;:false},{&quot;id&quot;:&quot;11&quot;,&quot;name&quot;:&quot;sofa&quot;,&quot;config&quot;:&quot;{\\&quot;protocol\\&quot;:\\&quot;zookeeper\\&quot;,\\&quot;register\\&quot;:\\&quot;127.0.0.1:2181\\&quot;}&quot;,&quot;role&quot;:0,&quot;enabled&quot;:true},{&quot;id&quot;:&quot;12&quot;,&quot;name&quot;:&quot;resilience4j&quot;,&quot;config&quot;:null,&quot;role&quot;:1,&quot;enabled&quot;:false},{&quot;id&quot;:&quot;13&quot;,&quot;name&quot;:&quot;tars&quot;,&quot;config&quot;:null,&quot;role&quot;:1,&quot;enabled&quot;:false},{&quot;id&quot;:&quot;14&quot;,&quot;name&quot;:&quot;context_path&quot;,&quot;config&quot;:null,&quot;role&quot;:1,&quot;enabled&quot;:false},{&quot;id&quot;:&quot;2&quot;,&quot;name&quot;:&quot;waf&quot;,&quot;config&quot;:&quot;{\\&quot;model\\&quot;:\\&quot;black\\&quot;}&quot;,&quot;role&quot;:1,&quot;enabled&quot;:false},{&quot;id&quot;:&quot;3&quot;,&quot;name&quot;:&quot;rewrite&quot;,&quot;config&quot;:null,&quot;role&quot;:1,&quot;enabled&quot;:false},{&quot;id&quot;:&quot;4&quot;,&quot;name&quot;:&quot;rate_limiter&quot;,&quot;config&quot;:&quot;{\\&quot;master\\&quot;:\\&quot;mymaster\\&quot;,\\&quot;mode\\&quot;:\\&quot;standalone\\&quot;,\\&quot;url\\&quot;:\\&quot;192.168.1.1:6379\\&quot;,\\&quot;password\\&quot;:\\&quot;abc\\&quot;}&quot;,&quot;role&quot;:1,&quot;enabled&quot;:false},{&quot;id&quot;:&quot;5&quot;,&quot;name&quot;:&quot;divide&quot;,&quot;config&quot;:null,&quot;role&quot;:0,&quot;enabled&quot;:true},{&quot;id&quot;:&quot;6&quot;,&quot;name&quot;:&quot;dubbo&quot;,&quot;config&quot;:&quot;{\\&quot;register\\&quot;:\\&quot;zookeeper://localhost:2181\\&quot;}&quot;,&quot;role&quot;:1,&quot;enabled&quot;:false},{&quot;id&quot;:&quot;7&quot;,&quot;name&quot;:&quot;monitor&quot;,&quot;config&quot;:&quot;{\\&quot;metricsName\\&quot;:\\&quot;prometheus\\&quot;,\\&quot;host\\&quot;:\\&quot;localhost\\&quot;,\\&quot;port\\&quot;:\\&quot;9190\\&quot;,\\&quot;async\\&quot;:\\&quot;true\\&quot;}&quot;,&quot;role&quot;:1,&quot;enabled&quot;:false},{&quot;id&quot;:&quot;8&quot;,&quot;name&quot;:&quot;springCloud&quot;,&quot;config&quot;:null,&quot;role&quot;:1,&quot;enabled&quot;:true},{&quot;id&quot;:&quot;9&quot;,&quot;name&quot;:&quot;hystrix&quot;,&quot;config&quot;:null,&quot;role&quot;:0,&quot;enabled&quot;:false}]},&quot;APP_AUTH&quot;:{&quot;md5&quot;:&quot;d751713988987e9331980363e24189ce&quot;,&quot;lastModifyTime&quot;:1611333351778,&quot;data&quot;:[]},&quot;RULE&quot;:{&quot;md5&quot;:&quot;79088c310f2d3ec32a2c366957fc7165&quot;,&quot;lastModifyTime&quot;:1611333354636,&quot;data&quot;:[{&quot;id&quot;:&quot;1351785381014155264&quot;,&quot;name&quot;:&quot;/springcloud/order/findById&quot;,&quot;pluginName&quot;:&quot;springCloud&quot;,&quot;selectorId&quot;:&quot;1351785378313023488&quot;,&quot;matchMode&quot;:0,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;handle&quot;:&quot;{\\&quot;path\\&quot;:\\&quot;/springcloud/order/findById\\&quot;,\\&quot;timeout\\&quot;:3000}&quot;,&quot;conditionDataList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;=&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/springcloud/order/findById&quot;}]},{&quot;id&quot;:&quot;1351785386563219456&quot;,&quot;name&quot;:&quot;/springcloud/order/path/**&quot;,&quot;pluginName&quot;:&quot;springCloud&quot;,&quot;selectorId&quot;:&quot;1351785378313023488&quot;,&quot;matchMode&quot;:0,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;handle&quot;:&quot;{\\&quot;path\\&quot;:\\&quot;/springcloud/order/path/**\\&quot;,\\&quot;timeout\\&quot;:3000}&quot;,&quot;conditionDataList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;match&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/springcloud/order/path/**&quot;}]},{&quot;id&quot;:&quot;1351785391931928576&quot;,&quot;name&quot;:&quot;/springcloud/order/path/**/name&quot;,&quot;pluginName&quot;:&quot;springCloud&quot;,&quot;selectorId&quot;:&quot;1351785378313023488&quot;,&quot;matchMode&quot;:0,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;handle&quot;:&quot;{\\&quot;path\\&quot;:\\&quot;/springcloud/order/path/**/name\\&quot;,\\&quot;timeout\\&quot;:3000}&quot;,&quot;conditionDataList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;match&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/springcloud/order/path/**/name&quot;}]},{&quot;id&quot;:&quot;1351785398240161792&quot;,&quot;name&quot;:&quot;/springcloud/order/save&quot;,&quot;pluginName&quot;:&quot;springCloud&quot;,&quot;selectorId&quot;:&quot;1351785378313023488&quot;,&quot;matchMode&quot;:0,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;handle&quot;:&quot;{\\&quot;path\\&quot;:\\&quot;/springcloud/order/save\\&quot;,\\&quot;timeout\\&quot;:3000}&quot;,&quot;conditionDataList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;=&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/springcloud/order/save&quot;}]},{&quot;id&quot;:&quot;1351785403906666496&quot;,&quot;name&quot;:&quot;/springcloud/test/**&quot;,&quot;pluginName&quot;:&quot;springCloud&quot;,&quot;selectorId&quot;:&quot;1351785378313023488&quot;,&quot;matchMode&quot;:0,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;handle&quot;:&quot;{\\&quot;path\\&quot;:\\&quot;/springcloud/test/**\\&quot;,\\&quot;timeout\\&quot;:3000}&quot;,&quot;conditionDataList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;match&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/springcloud/test/**&quot;}]},{&quot;id&quot;:&quot;1351837759351513088&quot;,&quot;name&quot;:&quot;/sofa/insert&quot;,&quot;pluginName&quot;:&quot;sofa&quot;,&quot;selectorId&quot;:&quot;1351837756520357888&quot;,&quot;matchMode&quot;:0,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;handle&quot;:&quot;{\\&quot;retries\\&quot;:0,\\&quot;loadBalance\\&quot;:\\&quot;random\\&quot;,\\&quot;timeout\\&quot;:3000}&quot;,&quot;conditionDataList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;=&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/sofa/insert&quot;}]},{&quot;id&quot;:&quot;1351837764875411456&quot;,&quot;name&quot;:&quot;/sofa/findAll&quot;,&quot;pluginName&quot;:&quot;sofa&quot;,&quot;selectorId&quot;:&quot;1351837756520357888&quot;,&quot;matchMode&quot;:0,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;handle&quot;:&quot;{\\&quot;retries\\&quot;:0,\\&quot;loadBalance\\&quot;:\\&quot;random\\&quot;,\\&quot;timeout\\&quot;:3000}&quot;,&quot;conditionDataList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;=&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/sofa/findAll&quot;}]},{&quot;id&quot;:&quot;1351837770344783872&quot;,&quot;name&quot;:&quot;/sofa/findById&quot;,&quot;pluginName&quot;:&quot;sofa&quot;,&quot;selectorId&quot;:&quot;1351837756520357888&quot;,&quot;matchMode&quot;:0,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;handle&quot;:&quot;{\\&quot;retries\\&quot;:0,\\&quot;loadBalance\\&quot;:\\&quot;random\\&quot;,\\&quot;timeout\\&quot;:3000}&quot;,&quot;conditionDataList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;=&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/sofa/findById&quot;}]}]}}}]\n</code></pre>\n<p>显然我们通过 <a href=\"http://localhost:9095/configs/fetch\" target=\"_blank\" rel=\"external\">http://localhost:9095/configs/fetch</a> 同步了配置</p>\n<p>接下来修改一个配置,可以看到</p>\n<p><img src=\"/2021/01/23/soul-gateway-src-code-learning-08/00change_config.png\" alt=\"img\"></p>\n<p>admin log</p>\n<pre><code class=\"bash\">2021-01-23 00:42:55.071  INFO 62391 --- [0.0-9095-exec-5] o.d.s.a.l.AbstractDataChangedListener    : update config cache[SELECTOR], old: {group=&#39;SELECTOR&#39;, md5=&#39;55e041ea36b518946ef09f9ed5d16ffe&#39;, lastModifyTime=1611333660488}, updated: {group=&#39;SELECTOR&#39;, md5=&#39;c8fa3ad3868f3ea1947f3641c753e888&#39;, lastModifyTime=1611333775071}\n2021-01-23 00:42:55.077  INFO 62391 --- [-long-polling-2] a.l.h.HttpLongPollingDataChangedListener : send response with the changed group,ip=127.0.0.1, group=SELECTOR, changeTime=1611333775074\n</code></pre>\n<p>bootstrap log, 看上去像是受到通知,然后去拉的配置</p>\n<pre><code class=\"bash\">2021-01-23 00:42:55.079  INFO 62417 --- [-long-polling-1] o.d.s.s.data.http.HttpSyncDataService    : Group config changed: [SELECTOR]\n2021-01-23 00:42:55.081  INFO 62417 --- [-long-polling-1] o.d.s.s.data.http.HttpSyncDataService    : request configs: [http://localhost:9095/configs/fetch?groupKeys=SELECTOR]\n2021-01-23 00:42:55.127  INFO 62417 --- [-long-polling-1] o.d.s.s.d.h.refresh.AbstractDataRefresh  : update SELECTOR config: {&quot;md5&quot;:&quot;c8fa3ad3868f3ea1947f3641c753e888&quot;,&quot;lastModifyTime&quot;:1611333775071,&quot;data&quot;:[{&quot;id&quot;:&quot;1351785378313023488&quot;,&quot;pluginId&quot;:&quot;8&quot;,&quot;pluginName&quot;:&quot;springCloud&quot;,&quot;name&quot;:&quot;/springcloud&quot;,&quot;matchMode&quot;:0,&quot;type&quot;:1,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;continued&quot;:true,&quot;handle&quot;:&quot;{\\&quot;serviceId\\&quot;:\\&quot;springCloud-test\\&quot;}&quot;,&quot;conditionList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;match&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/springcloud/**&quot;}]},{&quot;id&quot;:&quot;1351837756520357888&quot;,&quot;pluginId&quot;:&quot;11&quot;,&quot;pluginName&quot;:&quot;sofa&quot;,&quot;name&quot;:&quot;/sofa&quot;,&quot;matchMode&quot;:0,&quot;type&quot;:1,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;continued&quot;:true,&quot;handle&quot;:&quot;sofa&quot;,&quot;conditionList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;match&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/sofa/**&quot;}]},{&quot;id&quot;:&quot;1352658003622137856&quot;,&quot;pluginId&quot;:&quot;5&quot;,&quot;pluginName&quot;:&quot;divide&quot;,&quot;name&quot;:&quot;mo&quot;,&quot;matchMode&quot;:0,&quot;type&quot;:1,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;continued&quot;:true,&quot;handle&quot;:&quot;[{\\&quot;upstreamHost\\&quot;:\\&quot;baidu.com\\&quot;,\\&quot;protocol\\&quot;:\\&quot;http://\\&quot;,\\&quot;upstreamUrl\\&quot;:\\&quot;baidu.com\\&quot;,\\&quot;weight\\&quot;:\\&quot;50\\&quot;,\\&quot;status\\&quot;:true,\\&quot;timestamp\\&quot;:\\&quot;0\\&quot;,\\&quot;warmup\\&quot;:\\&quot;0\\&quot;}]&quot;,&quot;conditionList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;\\u003d&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/&quot;}]}]}\n2021-01-23 00:42:55.135  INFO 62417 --- [-long-polling-1] o.d.s.s.data.http.HttpSyncDataService    : get latest configs: [{&quot;code&quot;:200,&quot;message&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;SELECTOR&quot;:{&quot;md5&quot;:&quot;c8fa3ad3868f3ea1947f3641c753e888&quot;,&quot;lastModifyTime&quot;:1611333775071,&quot;data&quot;:[{&quot;id&quot;:&quot;1351785378313023488&quot;,&quot;pluginId&quot;:&quot;8&quot;,&quot;pluginName&quot;:&quot;springCloud&quot;,&quot;name&quot;:&quot;/springcloud&quot;,&quot;matchMode&quot;:0,&quot;type&quot;:1,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;continued&quot;:true,&quot;handle&quot;:&quot;{\\&quot;serviceId\\&quot;:\\&quot;springCloud-test\\&quot;}&quot;,&quot;conditionList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;match&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/springcloud/**&quot;}]},{&quot;id&quot;:&quot;1351837756520357888&quot;,&quot;pluginId&quot;:&quot;11&quot;,&quot;pluginName&quot;:&quot;sofa&quot;,&quot;name&quot;:&quot;/sofa&quot;,&quot;matchMode&quot;:0,&quot;type&quot;:1,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;continued&quot;:true,&quot;handle&quot;:&quot;sofa&quot;,&quot;conditionList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;match&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/sofa/**&quot;}]},{&quot;id&quot;:&quot;1352658003622137856&quot;,&quot;pluginId&quot;:&quot;5&quot;,&quot;pluginName&quot;:&quot;divide&quot;,&quot;name&quot;:&quot;mo&quot;,&quot;matchMode&quot;:0,&quot;type&quot;:1,&quot;sort&quot;:1,&quot;enabled&quot;:true,&quot;loged&quot;:true,&quot;continued&quot;:true,&quot;handle&quot;:&quot;[{\\&quot;upstreamHost\\&quot;:\\&quot;baidu.com\\&quot;,\\&quot;protocol\\&quot;:\\&quot;http://\\&quot;,\\&quot;upstreamUrl\\&quot;:\\&quot;baidu.com\\&quot;,\\&quot;weight\\&quot;:\\&quot;50\\&quot;,\\&quot;status\\&quot;:true,\\&quot;timestamp\\&quot;:\\&quot;0\\&quot;,\\&quot;warmup\\&quot;:\\&quot;0\\&quot;}]&quot;,&quot;conditionList&quot;:[{&quot;paramType&quot;:&quot;uri&quot;,&quot;operator&quot;:&quot;=&quot;,&quot;paramName&quot;:&quot;/&quot;,&quot;paramValue&quot;:&quot;/&quot;}]}]}}}]\n</code></pre>\n<p>根据log查看HttpSyncDataService逻辑, 同样实现了SyncDataService接口</p>\n<pre><code class=\"java\">//构造方法调用start方法\nprivate void start() {\n        // It could be initialized multiple times, so you need to control that.\n        if (RUNNING.compareAndSet(false, true)) {\n            // fetch all group configs.\n            this.fetchGroupConfig(ConfigGroupEnum.values());\n            int threadSize = serverList.size();\n            this.executor = new ThreadPoolExecutor(threadSize, threadSize, 60L, TimeUnit.SECONDS,\n                    new LinkedBlockingQueue&lt;&gt;(),\n                    SoulThreadFactory.create(&quot;http-long-polling&quot;, true));\n            // start long polling, each server creates a thread to listen for changes.\n            this.serverList.forEach(server -&gt; this.executor.execute(new HttpLongPollingTask(server)));\n        } else {\n            log.info(&quot;soul http long polling was started, executor=[{}]&quot;, executor);\n        }\n    }\n</code></pre>\n<pre><code class=\"java\">class HttpLongPollingTask implements Runnable {\n\n        private String server;\n\n        private final int retryTimes = 3;\n\n        HttpLongPollingTask(final String server) {\n            this.server = server;\n        }\n\n        @Override\n        public void run() {\n            while (RUNNING.get()) {\n                for (int time = 1; time &lt;= retryTimes; time++) {\n                    try {\n                      //核心长轮询, 看下面\n                        doLongPolling(server);\n                    } catch (Exception e) {\n                        // print warnning log.\n                        if (time &lt; retryTimes) {\n                            log.warn(&quot;Long polling failed, tried {} times, {} times left, will be suspended for a while! {}&quot;,\n                                    time, retryTimes - time, e.getMessage());\n                            ThreadUtils.sleep(TimeUnit.SECONDS, 5);\n                            continue;\n                        }\n                        // print error, then suspended for a while.\n                        log.error(&quot;Long polling failed, try again after 5 minutes!&quot;, e);\n                        ThreadUtils.sleep(TimeUnit.MINUTES, 5);\n                    }\n                }\n            }\n            log.warn(&quot;Stop http long polling.&quot;);\n        }\n    }\n</code></pre>\n<pre><code class=\"java\">private void doLongPolling(final String server) {\n        MultiValueMap&lt;String, String&gt; params = new LinkedMultiValueMap&lt;&gt;(8);\n        for (ConfigGroupEnum group : ConfigGroupEnum.values()) {\n            ConfigData&lt;?&gt; cacheConfig = factory.cacheConfigData(group);\n            String value = String.join(&quot;,&quot;, cacheConfig.getMd5(), String.valueOf(cacheConfig.getLastModifyTime()));\n            params.put(group.name(), Lists.newArrayList(value));\n        }\n        HttpHeaders headers = new HttpHeaders();\n        headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);\n        HttpEntity httpEntity = new HttpEntity(params, headers);\n        String listenerUrl = server + &quot;/configs/listener&quot;;\n        log.debug(&quot;request listener configs: [{}]&quot;, listenerUrl);\n        JsonArray groupJson = null;\n        try {\n          //请求listener查看是否有变坏\n            String json = this.httpClient.postForEntity(listenerUrl, httpEntity, String.class).getBody();\n            log.debug(&quot;listener result: [{}]&quot;, json);\n            groupJson = GSON.fromJson(json, JsonObject.class).getAsJsonArray(&quot;data&quot;);\n        } catch (RestClientException e) {\n            String message = String.format(&quot;listener configs fail, server:[%s], %s&quot;, server, e.getMessage());\n            throw new SoulException(message, e);\n        }\n\n        if (groupJson != null) {\n            // fetch group configuration async.\n            ConfigGroupEnum[] changedGroups = GSON.fromJson(groupJson, ConfigGroupEnum[].class);\n            if (ArrayUtils.isNotEmpty(changedGroups)) {\n                log.info(&quot;Group config changed: {}&quot;, Arrays.toString(changedGroups));\n              //如果有变化,发送请求获取配置\n                this.doFetchGroupConfig(server, changedGroups);\n            }\n        }\n    }\n</code></pre>\n<p>CongfigController</p>\n<pre><code class=\"java\">//依赖于HttpLongPollingDataChangedListener, HttpLongPollingDataChangedListener依赖于配置的soul.sync.http.enable\n@ConditionalOnBean(HttpLongPollingDataChangedListener.class)\n@RestController\n@RequestMapping(&quot;/configs&quot;)\n@Slf4j\npublic class ConfigController {\n    @PostMapping(value = &quot;/listener&quot;)\n    public void listener(final HttpServletRequest request, final HttpServletResponse response) {\n        longPollingListener.doLongPolling(request, response);\n    }\n}\n</code></pre>\n<pre><code class=\"java\">public void doLongPolling(final HttpServletRequest request, final HttpServletResponse response) {\n\n        //对比请求携带的配置md5, 如果与当前不一致证明已经更新, 这里面细节就先不详看了\n        List&lt;ConfigGroupEnum&gt; changedGroup = compareChangedGroup(request);\n        String clientIp = getRemoteIp(request);\n\n        // 如果有变化直接就返回 变化的配置group\n        if (CollectionUtils.isNotEmpty(changedGroup)) {\n            this.generateResponse(response, changedGroup);\n            log.info(&quot;send response with the changed group, ip={}, group={}&quot;, clientIp, changedGroup);\n            return;\n        }\n\n        // listen for configuration changed.\n        final AsyncContext asyncContext = request.startAsync();\n\n        // AsyncContext.settimeout() does not timeout properly, so you have to control it yourself\n        asyncContext.setTimeout(0L);\n\n        // block client&#39;s thread.\n        scheduler.execute(new LongPollingClient(asyncContext, clientIp, HttpConstants.SERVER_MAX_HOLD_TIMEOUT));\n    }\n</code></pre>\n","categories":[],"tags":[]}