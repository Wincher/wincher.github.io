{"title":"soul_gateway_src_code_learning_01","slug":"soul-gateway-src-code-learning-01","date":"2021-01-14T16:07:03.000Z","updated":"2021-01-24T17:23:15.044Z","comments":true,"excerpt":"","content":"<h2 id=\"Soul\"><a href=\"#Soul\" class=\"headerlink\" title=\"Soul\"></a>Soul</h2><p>这是一个异步的,高性能的,跨语言的,响应式的API网关。我希望能够有一样东西像灵魂一样，保护您的微服务。参考了Kong，Spring-Cloud-Gateway等优秀的网关后，站在巨人的肩膀上，Soul由此诞生！</p>\n<h2 id=\"Features\"><a href=\"#Features\" class=\"headerlink\" title=\"Features\"></a>Features</h2><ul>\n<li>支持各种语言(http协议)，支持 dubbo，springcloud协议。</li>\n<li>插件化设计思想，插件热插拔,易扩展。</li>\n<li>灵活的流量筛选，能满足各种流量控制。</li>\n<li>内置丰富的插件支持，鉴权，限流，熔断，防火墙等等。</li>\n<li>流量配置动态化，性能极高，网关消耗在 1~2ms。</li>\n<li>支持集群部署，支持 A/B Test, 蓝绿发布。</li>\n</ul>\n<p><a href=\"https://dromara.org/zh-cn/docs/soul/soul.html\" target=\"_blank\" rel=\"external\">官方文档</a></p>\n<p><a href=\"https://github.com/dromara/soul\" target=\"_blank\" rel=\"external\">Github repo</a></p>\n<p>本人使用的是 master分支 b1ed3daa87a1633cc6c5cc131baa0cdd78df643c 版本, 未来可能会有略微不同</p>\n\n    <pre><code class=\"lang-shell\"><span class=\"hljs-comment\"># clone repo 到本地</span>\ngit <span class=\"hljs-keyword\">clone</span> <span class=\"hljs-title\">https</span>://github.com/dromara/soul\n<span class=\"hljs-comment\"># 然后进行编译项目:</span>\nmvn clean package install -Dmaven.test.<span class=\"hljs-attr\">skip=</span><span class=\"hljs-literal\">true</span> -Dmaven.javadoc.<span class=\"hljs-attr\">skip=</span><span class=\"hljs-literal\">true</span> -Drat.<span class=\"hljs-attr\">skip=</span><span class=\"hljs-literal\">true</span> -Dcheckstyle.<span class=\"hljs-attr\">skip=</span><span class=\"hljs-literal\">true</span>\n\n<span class=\"hljs-comment\"># 编译中会遇到有些包找不到的问题, 主动地去编译相应的模块就好, 重复此步骤</span>\n<span class=\"hljs-comment\"># eg:</span>\nmvn clean package install -Dmaven.test.<span class=\"hljs-attr\">skip=</span><span class=\"hljs-literal\">true</span> -Dmaven.javadoc.<span class=\"hljs-attr\">skip=</span><span class=\"hljs-literal\">true</span> -Drat.<span class=\"hljs-attr\">skip=</span><span class=\"hljs-literal\">true</span> -Dcheckstyle.<span class=\"hljs-attr\">skip=</span><span class=\"hljs-literal\">true</span> -f soul-plugin/soul-plugin-<span class=\"hljs-literal\">monitor</span>/pom.<span class=\"hljs-keyword\">xml</span>\n<span class=\"hljs-title\"></span></code></pre>\n<p>编辑 soul-admin的配置文件 soul-admin/src/main/resources/application.yml</p>\n\n    <pre><code class=\"lang-yaml\"><span class=\"hljs-comment\"># 去掉h2配置文件的注释</span>\n<span class=\"hljs-attr\">spring:</span>\n<span class=\"hljs-attr\">  profiles:</span>\n<span class=\"hljs-attr\">    active:</span> <span class=\"hljs-string\">h2</span>\n<span class=\"hljs-comment\"># 或者配置mysql数据库</span>\n<span class=\"hljs-attr\">datasource:</span>\n<span class=\"hljs-attr\">    url:</span> <span class=\"hljs-attr\">jdbc:mysql://localhost:3306/soul?useUnicode=true&amp;characterEncoding=utf-8</span>\n<span class=\"hljs-attr\">    username:</span> <span class=\"hljs-string\">root</span>\n<span class=\"hljs-attr\">    password:</span>\n<span class=\"hljs-attr\">    driver-class-name:</span> <span class=\"hljs-string\">com.mysql.jdbc.Driver</span>\n</code></pre>\n<p>在IDEA中运行 soul-admin 的入口函数 soul-admin/src/main/java/org/dromara/soul/admin/SoulAdminBootstrap.java</p>\n<p>访问 <a href=\"http://127.0.0.1:9095\" target=\"_blank\" rel=\"external\">http://127.0.0.1:9095</a> 我们就看到首页了</p>\n<p><img src=\"/2021/01/15/soul-gateway-src-code-learning-01/00login.png\" alt=\"pic\"></p>\n<p>默认的 账号: <strong>admin</strong> 密码:<strong>123456</strong></p>\n<p><img src=\"/2021/01/15/soul-gateway-src-code-learning-01/01index.png\" alt=\"pic\"></p>\n<p>随后在IDEA中运行 soul-bootstrap 的入口函数 soul-bootstrap/src/main/java/org/dromara/soul/bootstrap/SoulBootstrapApplication.java</p>\n<p><img src=\"/2021/01/15/soul-gateway-src-code-learning-01/02start_bootstrap_log.jpg\" alt=\"pic\"></p>\n<p>注意这个log是soul-admin产生的,也就是soul-bootstrap启动后与admin建立了连接</p>\n<p>这个时候访问 <a href=\"http://localhost:9195/\" target=\"_blank\" rel=\"external\">http://localhost:9195/</a> 也就是soul-bootstrap会返回</p>\n\n    <pre><code class=\"lang-json\">{\n <span class=\"hljs-attribute\">code</span>: -<span class=\"hljs-number\">107</span>,\n message: <span class=\"hljs-string\">\"Can not find selector, please check your configuration!\"</span>,\n data: null\n}\n</code></pre>\n<p>bootstrap产生log</p>\n\n    <pre><code class=\"lang-bash\"><span class=\"hljs-number\">2021</span><span class=\"hljs-bullet\">-01</span><span class=\"hljs-bullet\">-15</span> <span class=\"hljs-number\">00</span><span class=\"hljs-string\">:20:00.542</span> <span class=\"hljs-string\">ERROR</span> <span class=\"hljs-number\">93827</span> <span class=\"hljs-meta\">---</span> <span class=\"hljs-string\">[-work-threads-2]</span> <span class=\"hljs-string\">o.d.soul.plugin.base.utils.CheckUtils</span>    <span class=\"hljs-string\">:</span> <span class=\"hljs-string\">can</span> <span class=\"hljs-string\">not</span> <span class=\"hljs-string\">match</span> <span class=\"hljs-string\">selector</span> <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">divide</span>\n</code></pre>\n<p>根据提示我们打开divide页面, <a href=\"http://localhost:9095/#/plug/divide\" target=\"_blank\" rel=\"external\">http://localhost:9095/#/plug/divide</a></p>\n<p>添加selector</p>\n<p><img src=\"/2021/01/15/soul-gateway-src-code-learning-01/03selector.png\" alt=\"pic\"></p>\n<p><img src=\"/2021/01/15/soul-gateway-src-code-learning-01/030_opt.jpg\" alt=\"pic\"></p>\n<blockquote>\n<p>添加selector中我发现 protocol 和 ip:port 会拼接成我们的代理目标地址, 也就是说https<strong>://</strong> 这部分也是要手动写的,这是可以优化的点, 做成可选项的 schema, ip, 和port可选缺省 80, 这样可以更规范配置,另外如上图所示这样的写法也是可以正常被代理到 <a href=\"http://baidu.com\" target=\"_blank\" rel=\"external\">http://baidu.com</a> 的</p>\n</blockquote>\n<p>添加rule</p>\n<p><img src=\"/2021/01/15/soul-gateway-src-code-learning-01/04rule.png\" alt=\"pic\"></p>\n\n    <pre><code class=\"lang-bash\">$curl -i localhost:<span class=\"hljs-number\">9195</span>\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">302</span> Found\nContent-Length: <span class=\"hljs-number\">161</span>\n<span class=\"hljs-symbol\">Connection:</span> keep-alive\nContent-Type: text/html\n<span class=\"hljs-symbol\">Date:</span> Thu, <span class=\"hljs-number\">14</span> Jan <span class=\"hljs-number\">2021</span> <span class=\"hljs-number\">16</span>:<span class=\"hljs-number\">29</span>:<span class=\"hljs-number\">38</span> GMT\nKeep-Alive: timeout=<span class=\"hljs-number\">4</span>\n<span class=\"hljs-symbol\">Location:</span> http:<span class=\"hljs-comment\">//www.baidu.com/</span>\nProxy-Connection: keep-alive\n<span class=\"hljs-symbol\">Server:</span> bfe/<span class=\"hljs-number\">1.0</span><span class=\"hljs-number\">.8</span><span class=\"hljs-number\">.18</span>\n\n<span class=\"hljs-params\">&lt;html&gt;</span>\n<span class=\"hljs-params\">&lt;head&gt;</span><span class=\"hljs-params\">&lt;title&gt;</span><span class=\"hljs-number\">302</span> Found<span class=\"hljs-params\">&lt;/title&gt;</span><span class=\"hljs-params\">&lt;/head&gt;</span>\n<span class=\"hljs-params\">&lt;body bgcolor=\"white\"&gt;</span>\n<span class=\"hljs-params\">&lt;center&gt;</span><span class=\"hljs-params\">&lt;h1&gt;</span><span class=\"hljs-number\">302</span> Found<span class=\"hljs-params\">&lt;/h1&gt;</span><span class=\"hljs-params\">&lt;/center&gt;</span>\n<span class=\"hljs-params\">&lt;hr&gt;</span><span class=\"hljs-params\">&lt;center&gt;</span>bfe/<span class=\"hljs-number\">1.0</span><span class=\"hljs-number\">.8</span><span class=\"hljs-number\">.18</span><span class=\"hljs-params\">&lt;/center&gt;</span>\n<span class=\"hljs-params\">&lt;/body&gt;</span>\n<span class=\"hljs-params\">&lt;/html&gt;</span>\n</code></pre>\n<p>可以看到我们访问刚配置好的根路径 / path 已经得到重定向返回结果, 浏览器会重定向到https的百度</p>\n<p>至此, 最基本的soul gateway已经跑起来了</p>\n","categories":[],"tags":[{"name":"SOUL","path":"api/tags/SOUL.json"}]}