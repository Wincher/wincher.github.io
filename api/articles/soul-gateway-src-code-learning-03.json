{"title":"soul_gateway_src_code_learning_03","slug":"soul-gateway-src-code-learning-03","date":"2021-01-16T18:26:10.000Z","updated":"2021-01-26T07:50:41.711Z","comments":true,"excerpt":"","content":"<h3 id=\"SOUL-Dubbo-demo\"><a href=\"#SOUL-Dubbo-demo\" class=\"headerlink\" title=\"SOUL Dubbo demo\"></a>SOUL Dubbo demo</h3><p>使用dubbo插件, 访问 <a href=\"http://127.0.0.1:9095/#/system/plugin\" target=\"_blank\" rel=\"external\">http://127.0.0.1:9095/#/system/plugin</a> 可以看到 dubbo 插件默认是</p>\n<p><img src=\"/2021/01/17/soul-gateway-src-code-learning-03/01turn_on.jpg\" alt=\"img\"></p>\n<p>点击editor </p>\n<p><img src=\"/2021/01/17/soul-gateway-src-code-learning-03/00dubbo_plugin.png\" alt=\"img\"></p>\n<p>开启dubbo plugin</p>\n<p>启动 zk,我用的docker <code>docker run -p 2181:2181 --restart unless-stopped --name zk -d zookeeper</code></p>\n<p>IDEA中运行 soul-examples/soul-examples-dubbo/soul-examples-apache-dubbo-service/src/main/java/org/dromara/soul/examples/apache/dubbo/service/TestApacheDubboApplication.java</p>\n<pre><code class=\"shell\">2021-01-17 02:55:52.742  INFO 38578 --- [pool-2-thread-1] o.d.s.client.common.utils.RegisterUtils  : dubbo client register success: {&quot;appName&quot;:&quot;dubbo&quot;,&quot;contextPath&quot;:&quot;/dubbo&quot;,&quot;path&quot;:&quot;/dubbo/findAll&quot;,&quot;pathDesc&quot;:&quot;Get all data&quot;,&quot;rpcType&quot;:&quot;dubbo&quot;,&quot;serviceName&quot;:&quot;org.dromara.soul.examples.dubbo.api.service.DubboTestService&quot;,&quot;methodName&quot;:&quot;findAll&quot;,&quot;ruleName&quot;:&quot;/dubbo/findAll&quot;,&quot;parameterTypes&quot;:&quot;&quot;,&quot;rpcExt&quot;:&quot;{\\&quot;group\\&quot;:\\&quot;\\&quot;,\\&quot;version\\&quot;:\\&quot;\\&quot;,\\&quot;loadbalance\\&quot;:\\&quot;random\\&quot;,\\&quot;retries\\&quot;:2,\\&quot;timeout\\&quot;:10000,\\&quot;url\\&quot;:\\&quot;\\&quot;}&quot;,&quot;enabled&quot;:true}\n</code></pre>\n<p>同样可以看到之前启动 soul-examples-http时的类似log, 显然dubbo的服务也注册到了soul</p>\n<p>访问 <a href=\"http://127.0.0.1:9095/#/plug/dubbo\" target=\"_blank\" rel=\"external\">http://127.0.0.1:9095/#/plug/dubbo</a> 同样可以看到 刚起的实例服务注册了rule 和selector 到了soul上</p>\n<p>尝试通过网关访问dubbo服务, 果然成功</p>\n<pre><code class=\"bash\">curl  localhost:9195/dubbo/findAll\n{&quot;code&quot;:200,&quot;message&quot;:&quot;Access to success!&quot;,&quot;data&quot;:{&quot;name&quot;:&quot;hello world Soul Apache, findAll&quot;,&quot;id&quot;:&quot;-1845873449&quot;}}%\n</code></pre>\n<p>dubbo注册到soul同http一样需要以下配置</p>\n<pre><code class=\"yaml\">soul:\n  dubbo:\n    adminUrl: http://localhost:9095\n    contextPath: /dubbo\n    appName: dubbo\n</code></pre>\n<p>流程与divide完全一致</p>\n<p>同divide, 使用了 AlibabaDubboServiceBeanPostProcessor 去处理 拥有 @SoulDubboClient 注解的接口</p>\n<p>通过SoulWebHandler#execute遍历注插件后执行 AbstractSoulPlugin具体实现类的execute方法, 这里留个todo:接下来详细分析</p>\n","categories":[],"tags":[{"name":"SOUL","path":"api/tags/SOUL.json"}]}