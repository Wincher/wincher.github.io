{"title":"Docker入门(安装以及简单操作)","slug":"docker-helloworld","date":"2018-01-21T06:21:47.000Z","updated":"2021-03-11T06:03:10.345Z","comments":true,"excerpt":"","content":"<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p><img src=\"/2018/01/21/docker-helloworld/1.png\" alt=\"pic\"></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>按理来说应该大家看这篇文章环境可能没有装过docker，但是可能有的人装过了，我们要安装的是docker-ce也就是社区版，如果你希望安装比较新的版本请看如下操作，如果你装过了，请执行接下来的操作<br>首先查看安装的Docker<br><img src=\"/2018/01/21/docker-helloworld/2.png\" alt=\"pic\"><br>然后依次卸载掉</p>\n<pre><code class=\"bash\">yum -y rmeove docker.x86_64\nyum -y rmeove docker-client.x86_64\nyum -y rmeove docker-common.x86_64\n</code></pre>\n<p>请注意如果没有就没必要删了，你也删不了<br>接下来清除余党，Docker留下来的文件<br><code>rm -rf /var/lib/docker/</code></p>\n<blockquote>\n<p>然后我门添加docker-ce的源文件(不要纠结:官方源目前下载下来的版本是1.12,Docker之前是个庞大的东西，什么都做，发展到1.12版本的时候容器已经剥离出来了，在17年Docker拆分出了Moby项目，专用于容器，Docker进行产品化分为Docker CE 和Docker EE 也就是社区版和开发版本，感兴趣的话的大家可以在网上寻找Docker的发展史之类的，我们的目的就是要下载一个相对新的社区版本，应该讲明白目的了吧)</p>\n</blockquote>\n<p>下面的命令就是为yum添加Docker CE版本的软件源<br><code>yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</code><br><img src=\"/2018/01/21/docker-helloworld/3.png\" alt=\"pic\"><br>如果出现上图中的错误，那么就执行安装yum-config-manager<br>执行:<code>yun -y install yum-utils</code><br>然后继续执行上面为yun添加Docker CE源的命令<br><img src=\"/2018/01/21/docker-helloworld/4.png\" alt=\"pic\"><br>然后使用yum安装docker-ce：<br><code>yum -y install docker-ce</code><br>安装完成后查看docker状态：<br><img src=\"/2018/01/21/docker-helloworld/5.png\" alt=\"pic\"><br>然后启动docker,并查看docker信息（太长就不贴图了）</p>\n<pre><code class=\"bash\">systemctl start docker\ndocker info\n</code></pre>\n<p><img src=\"/2018/01/21/docker-helloworld/6.jpeg\" alt=\"pic\">  </p>\n<h2 id=\"简单命令\"><a href=\"#简单命令\" class=\"headerlink\" title=\"简单命令\"></a>简单命令</h2><ul>\n<li>docker ps -a查看全部容器(container)</li>\n<li>docker images查看镜像文件(image)，你可以理解为image是一个类class，而container就是这个类的实体，可以建立很多个实体，实体之间是隔离的</li>\n<li>docker search 搜索镜像</li>\n<li>docker pull 将镜像下载到本地</li>\n<li>docker docker run -dti centos：7 bash<br>  – -d代表后台运行<br>  – –name为容器添加名称</li>\n<li><p>docker exec -ti<br>-i: 以交互模式运行容器，通常与 -t 同时使用<br>-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用</p>\n</li>\n<li><p>docker需要root权限：（生产环境风险太大）<br><code>usermod -aG docker yourname</code> 将用户添加到docker用户组，更改后要重新进入</p>\n</li>\n</ul>\n<h2 id=\"扩展的问题\"><a href=\"#扩展的问题\" class=\"headerlink\" title=\"扩展的问题\"></a>扩展的问题</h2><ul>\n<li>国内访问Docker镜像库拉去镜像速度较慢,可以选择配置国内的源,比如可以使用DaoCloud提供的服务<br>需要注册账号,嫌麻烦可以直接使用这个脚本,执行即可<br><code>curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://31eeb092.m.daocloud.io</code></li>\n<li>容器的编排（保证容器可以均匀分配资源，如何使用容器，怎么分布到各个服务器节点，容器如何通信）Mesos Kubernetes（基于docker，google开源）</li>\n<li>如果系统资源不足以创建容器，会创建失败</li>\n<li>容器可以独占内核，一般只会指定内存最大占比，以及最大内存值</li>\n</ul>\n","categories":[{"name":"Docker","path":"api/categories/Docker.json"}],"tags":[{"name":"ForRemember","path":"api/tags/ForRemember.json"},{"name":"Docker","path":"api/tags/Docker.json"}]}