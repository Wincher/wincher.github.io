{"title":"soul_gateway_src_code_learning_04","slug":"soul-gateway-src-code-learning-04","date":"2021-01-18T16:38:50.000Z","updated":"2021-01-20T15:55:00.625Z","comments":true,"excerpt":"","content":"<h3 id=\"SOUL-sofa-demo\"><a href=\"#SOUL-sofa-demo\" class=\"headerlink\" title=\"SOUL sofa demo\"></a>SOUL sofa demo</h3><p>和上一节的dubbo一样, 使用sofa插件, 访问 <a href=\"http://127.0.0.1:9095/#/system/plugin\" target=\"_blank\" rel=\"external\">http://127.0.0.1:9095/#/system/plugin</a> 可以看到 sofa 插件默认是点击editor </p>\n<p>开启sofa plugin</p>\n<p>启动 zk,我用的docker <code>docker run -p 2181:2181 --restart unless-stopped --name zk -d zookeeper</code></p>\n<p>IDEA中运行 soul-examples/soul-examples-sofa/src/main/java/org/dromara/soul/examples/sofa/service/TestSofaApplication.java</p>\n\n    <pre><code class=\"lang-shell\">2021-01-19 00:48:51.530  <span class=\"hljs-builtin-name\">INFO</span> 77721 --- [pool-1-thread-1] o.d.s.client.common.utils.RegisterUtils  : sofa<span class=\"hljs-built_in\"> client </span>register success: {<span class=\"hljs-string\">\"appName\"</span>:<span class=\"hljs-string\">\"sofa\"</span>,<span class=\"hljs-string\">\"contextPath\"</span>:<span class=\"hljs-string\">\"/sofa\"</span>,<span class=\"hljs-string\">\"path\"</span>:<span class=\"hljs-string\">\"/sofa/insert\"</span>,<span class=\"hljs-string\">\"pathDesc\"</span>:<span class=\"hljs-string\">\"Insert a row of data\"</span>,<span class=\"hljs-string\">\"rpcType\"</span>:<span class=\"hljs-string\">\"sofa\"</span>,<span class=\"hljs-string\">\"serviceName\"</span>:<span class=\"hljs-string\">\"org.dromara.soul.examples.dubbo.api.service.DubboTestService\"</span>,<span class=\"hljs-string\">\"methodName\"</span>:<span class=\"hljs-string\">\"insert\"</span>,<span class=\"hljs-string\">\"ruleName\"</span>:<span class=\"hljs-string\">\"/sofa/insert\"</span>,<span class=\"hljs-string\">\"parameterTypes\"</span>:<span class=\"hljs-string\">\"org.dromara.soul.examples.dubbo.api.entity.DubboTest\"</span>,<span class=\"hljs-string\">\"rpcExt\"</span>:<span class=\"hljs-string\">\"{\\\"loadbalance\\\":\\\"hash\\\",\\\"retries\\\":3,\\\"timeout\\\":-1}\"</span>,<span class=\"hljs-string\">\"enabled\"</span>:true} \n2021-01-19 00:48:51.546  <span class=\"hljs-builtin-name\">INFO</span> 77721 --- [pool-1-thread-1] o.d.s.client.common.utils.RegisterUtils  : sofa<span class=\"hljs-built_in\"> client </span>register success: {<span class=\"hljs-string\">\"appName\"</span>:<span class=\"hljs-string\">\"sofa\"</span>,<span class=\"hljs-string\">\"contextPath\"</span>:<span class=\"hljs-string\">\"/sofa\"</span>,<span class=\"hljs-string\">\"path\"</span>:<span class=\"hljs-string\">\"/sofa/findById\"</span>,<span class=\"hljs-string\">\"pathDesc\"</span>:<span class=\"hljs-string\">\"Find by Id\"</span>,<span class=\"hljs-string\">\"rpcType\"</span>:<span class=\"hljs-string\">\"sofa\"</span>,<span class=\"hljs-string\">\"serviceName\"</span>:<span class=\"hljs-string\">\"org.dromara.soul.examples.dubbo.api.service.DubboTestService\"</span>,<span class=\"hljs-string\">\"methodName\"</span>:<span class=\"hljs-string\">\"findById\"</span>,<span class=\"hljs-string\">\"ruleName\"</span>:<span class=\"hljs-string\">\"/sofa/findById\"</span>,<span class=\"hljs-string\">\"parameterTypes\"</span>:<span class=\"hljs-string\">\"java.lang.String\"</span>,<span class=\"hljs-string\">\"rpcExt\"</span>:<span class=\"hljs-string\">\"{\\\"loadbalance\\\":\\\"hash\\\",\\\"retries\\\":3,\\\"timeout\\\":-1}\"</span>,<span class=\"hljs-string\">\"enabled\"</span>:true} \n2021-01-19 00:48:51.578  <span class=\"hljs-builtin-name\">INFO</span> 77721 --- [pool-1-thread-1] o.d.s.client.common.utils.RegisterUtils  : sofa<span class=\"hljs-built_in\"> client </span>register success: {<span class=\"hljs-string\">\"appName\"</span>:<span class=\"hljs-string\">\"sofa\"</span>,<span class=\"hljs-string\">\"contextPath\"</span>:<span class=\"hljs-string\">\"/sofa\"</span>,<span class=\"hljs-string\">\"path\"</span>:<span class=\"hljs-string\">\"/sofa/findAll\"</span>,<span class=\"hljs-string\">\"pathDesc\"</span>:<span class=\"hljs-string\">\"Get all data\"</span>,<span class=\"hljs-string\">\"rpcType\"</span>:<span class=\"hljs-string\">\"sofa\"</span>,<span class=\"hljs-string\">\"serviceName\"</span>:<span class=\"hljs-string\">\"org.dromara.soul.examples.dubbo.api.service.DubboTestService\"</span>,<span class=\"hljs-string\">\"methodName\"</span>:<span class=\"hljs-string\">\"findAll\"</span>,<span class=\"hljs-string\">\"ruleName\"</span>:<span class=\"hljs-string\">\"/sofa/findAll\"</span>,<span class=\"hljs-string\">\"parameterTypes\"</span>:<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"rpcExt\"</span>:<span class=\"hljs-string\">\"{\\\"loadbalance\\\":\\\"hash\\\",\\\"retries\\\":3,\\\"timeout\\\":-1}\"</span>,<span class=\"hljs-string\">\"enabled\"</span>:true}\n</code></pre>\n<p>同样可以看到之前启动 soul-examples-http, soul-examples-dubbo 时的类似log, 显然sofa的服务也注册到了soul</p>\n<p>访问 <a href=\"http://127.0.0.1:9095/#/plug/sofa\" target=\"_blank\" rel=\"external\">http://127.0.0.1:9095/#/plug/sofa</a> 同样可以看到 刚起的实例服务注册了rule 和selector 到了soul上</p>\n<p><img src=\"/2021/01/19/soul-gateway-src-code-learning-04/00register.png\" alt=\"img\"></p>\n<p>尝试通过网关访问 sofa 服务</p>\n\n    <pre><code class=\"lang-bash\"><span class=\"hljs-variable\">$curl</span> -<span class=\"hljs-selector-tag\">i</span> localhost:<span class=\"hljs-number\">9195</span>/sofa/findAll\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\n<span class=\"hljs-attribute\">content</span>-length: <span class=\"hljs-number\">0</span>\n</code></pre>\n<p>只能得到空200响应, 这显然是不正确的</p>\n<p>通过追踪 soul-web/src/main/java/org/dromara/soul/web/handler/SoulWebHandler.java 中静态内部类DefaultSoulPluginChain实现了 soul-plugin/soul-plugin-api/src/main/java/org/dromara/soul/plugin/api/SoulPluginChain.java 接口</p>\n\n    <pre><code class=\"lang-java\"><span class=\"hljs-keyword\">public</span> Mono&lt;<span class=\"hljs-built_in\">Void</span>&gt; execute(<span class=\"hljs-keyword\">final</span> ServerWebExchange exchange) {\n            <span class=\"hljs-keyword\">return</span> Mono.defer(() -&gt; {\n                <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.index &lt; plugins.size()) {\n                    SoulPlugin plugin = plugins.<span class=\"hljs-keyword\">get</span>(<span class=\"hljs-keyword\">this</span>.index++);\n                    <span class=\"hljs-built_in\">Boolean</span> skip = plugin.skip(exchange);\n                    <span class=\"hljs-keyword\">if</span> (skip) {\n                        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.execute(exchange);\n                    }\n                    <span class=\"hljs-keyword\">return</span> plugin.execute(exchange, <span class=\"hljs-keyword\">this</span>);\n                }\n<span class=\"hljs-comment\">//              由于需要命中的sofa plugin没有加载, 所以最后返回</span>\n                <span class=\"hljs-keyword\">return</span> Mono.empty();\n            });\n        }\n</code></pre>\n<p>所以我们要做的就是在soul-bootstrap/pom.xml文件中添加</p>\n\n    <pre><code class=\"lang-xml\"><span class=\"xml\"><span class=\"hljs-comment\">&lt;!-- sofa plugin start --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alipay.sofa<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>sofa-rpc-all<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>5.7.6<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.curator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>curator-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.0.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.curator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>curator-framework<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.0.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.curator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>curator-recipes<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.0.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-plugin-sofa<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>$</span><span class=\"hljs-template-variable\">{project.version}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- sofa plugin end --&gt;</span>\n</span></code></pre>\n<p>重启bootstrap 可以看到sofa plugin被加载了</p>\n<p><img src=\"/2021/01/19/soul-gateway-src-code-learning-04/01sofa_plugin_log.png\" alt=\"img\"></p>\n<p>再次尝试请求 </p>\n\n    <pre><code class=\"lang-bash\">curl localhost:<span class=\"hljs-number\">9195</span><span class=\"hljs-meta-keyword\">/sofa/</span><span class=\"hljs-class\">findAll\n</span>{<span class=\"hljs-string\">\"code\"</span>:<span class=\"hljs-number\">200</span>,<span class=\"hljs-string\">\"message\"</span>:<span class=\"hljs-string\">\"Access to success!\"</span>,<span class=\"hljs-string\">\"data\"</span>:{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"hello world Soul Sofa , findAll\"</span>,<span class=\"hljs-string\">\"id\"</span>:<span class=\"hljs-string\">\"1392929023\"</span>}}%\n</code></pre>\n<p>类似divide,dubbo 使用了 soul-client/soul-client-sofa/src/main/java/org/dromara/soul/client/sofa/SofaServiceBeanPostProcessor.java 去处理 拥有 @SoulSofaClient 注解的接</p>\n<p>接下来在 打断点追踪下 soul-plugin/soul-plugin-sofa/src/main/java/org/dromara/soul/plugin/sofa/SofaPlugin.java#doExecute</p>\n\n    <pre><code class=\"lang-java\"><span class=\"hljs-keyword\">protected</span> Mono&lt;Void&gt; doExecute(<span class=\"hljs-keyword\">final</span> ServerWebExchange exchange, <span class=\"hljs-keyword\">final</span> SoulPluginChain chain, <span class=\"hljs-keyword\">final</span> SelectorData selector, <span class=\"hljs-keyword\">final</span> RuleData rule) {\n  <span class=\"hljs-comment\">//这里的获取的值值是在 soul-plugin/soul-plugin-sofa/src/main/java/org/dromara/soul/plugin/sofa/param/BodyParamPlugin.java 中处理的</span>\n    String body = exchange.getAttribute(Constants.SOFA_PARAMS);\n    SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT);\n    <span class=\"hljs-keyword\">assert</span> soulContext != <span class=\"hljs-keyword\">null</span>;\n    MetaData metaData = exchange.getAttribute(Constants.META_DATA);\n  <span class=\"hljs-comment\">//这里的metadata具体内容 eg: metaData -&gt; {MetaData@11407} \"MetaData(id=null, appName=sofa, contextPath=/sofa, path=/sofa/findAll, rpcType=sofa, serviceName=org.dromara.soul.examples.dubbo.api.service.DubboTestService, methodName=findAll, parameterTypes=null, rpcExt={\"loadbalance\":\"hash\",\"retries\":3,\"timeout\":-1}, enabled=true)\"</span>\n    <span class=\"hljs-keyword\">if</span> (!checkMetaData(metaData)) {\n        <span class=\"hljs-keyword\">assert</span> metaData != <span class=\"hljs-keyword\">null</span>;\n        log.<span class=\"hljs-keyword\">error</span>(<span class=\"hljs-string\">\" path is :{}, meta data have error.... {}\"</span>, soulContext.getPath(), metaData.toString());\n        exchange.getResponse().setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR);\n        Object <span class=\"hljs-keyword\">error</span> = SoulResultWrap.<span class=\"hljs-keyword\">error</span>(SoulResultEnum.META_DATA_ERROR.getCode(), SoulResultEnum.META_DATA_ERROR.getMsg(), <span class=\"hljs-keyword\">null</span>);\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">return</span> WebFluxResultUtils.<span class=\"hljs-title\">result</span><span class=\"hljs-params\">(exchange, <span class=\"hljs-keyword\">error</span>)</span></span>;\n    }\n    <span class=\"hljs-keyword\">if</span> (StringUtils.isNoneBlank(metaData.getParameterTypes()) &amp;&amp; StringUtils.isBlank(body)) {\n        exchange.getResponse().setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR);\n        Object <span class=\"hljs-keyword\">error</span> = SoulResultWrap.<span class=\"hljs-keyword\">error</span>(SoulResultEnum.SOFA_HAVE_BODY_PARAM.getCode(), SoulResultEnum.SOFA_HAVE_BODY_PARAM.getMsg(), <span class=\"hljs-keyword\">null</span>);\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">return</span> WebFluxResultUtils.<span class=\"hljs-title\">result</span><span class=\"hljs-params\">(exchange, <span class=\"hljs-keyword\">error</span>)</span></span>;\n    }\n    <span class=\"hljs-keyword\">final</span> Mono&lt;Object&gt; result = sofaProxyService.genericInvoker(body, metaData, exchange);\n    <span class=\"hljs-keyword\">return</span> result.then(chain.execute(exchange));\n}\n</code></pre>\n<p>然后通过sofaProxyService 去获取真实服务返回值</p>\n\n    <pre><code class=\"lang-java\"><span class=\"hljs-keyword\">public</span> Mono&lt;<span class=\"hljs-keyword\">Object</span>&gt; genericInvoker(<span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">String</span> body, <span class=\"hljs-keyword\">final</span> MetaData metaData, <span class=\"hljs-keyword\">final</span> ServerWebExchange exchange) <span class=\"hljs-keyword\">throws</span> SoulException {\n    ConsumerConfig&lt;GenericService&gt; reference = ApplicationConfigCache.getInstance().<span class=\"hljs-built_in\">get</span>(metaData.getPath());\n    <span class=\"hljs-keyword\">if</span> (Objects.isNull(reference) || StringUtils.isEmpty(reference.getInterfaceId())) {\n        ApplicationConfigCache.getInstance().invalidate(metaData.getServiceName());\n        reference = ApplicationConfigCache.getInstance().initRef(metaData);\n    }\n    GenericService genericService = reference.refer();\n    Pair&lt;<span class=\"hljs-keyword\">String</span>[], <span class=\"hljs-keyword\">Object</span>[]&gt; pair;\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">null</span> == body || <span class=\"hljs-string\">\"\"</span>.equals(body) || <span class=\"hljs-string\">\"{}\"</span>.equals(body) || <span class=\"hljs-string\">\"null\"</span>.equals(body)) {\n        pair = <span class=\"hljs-keyword\">new</span> ImmutablePair&lt;&gt;(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">String</span>[]{}, <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">Object</span>[]{});\n    } <span class=\"hljs-keyword\">else</span> {\n        pair = sofaParamResolveService.buildParameter(body, metaData.getParameterTypes());\n    }\n    CompletableFuture&lt;<span class=\"hljs-keyword\">Object</span>&gt; future = <span class=\"hljs-keyword\">new</span> CompletableFuture&lt;&gt;();\n    RpcInvokeContext.getContext().setResponseCallback(<span class=\"hljs-keyword\">new</span> SofaResponseCallback&lt;<span class=\"hljs-keyword\">Object</span>&gt;() {\n        @Override\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> onAppResponse(<span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">Object</span> o, <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">String</span> s, <span class=\"hljs-keyword\">final</span> RequestBase requestBase) {\n            future.complete(o);\n        }\n\n        @Override\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> onAppException(<span class=\"hljs-keyword\">final</span> Throwable throwable, <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">String</span> s, <span class=\"hljs-keyword\">final</span> RequestBase requestBase) {\n            future.completeExceptionally(throwable);\n        }\n\n        @Override\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> onSofaException(<span class=\"hljs-keyword\">final</span> SofaRpcException e, <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">String</span> s, <span class=\"hljs-keyword\">final</span> RequestBase requestBase) {\n            future.completeExceptionally(e);\n        }\n    });\n    genericService.$invoke(metaData.getMethodName(), pair.getLeft(), pair.getRight());\n    <span class=\"hljs-keyword\">return</span> Mono.fromFuture(future.thenApply(ret -&gt; {\n        <span class=\"hljs-keyword\">if</span> (Objects.isNull(ret)) {\n            ret = Constants.SOFA_RPC_RESULT_EMPTY;\n        }\n        exchange.getAttributes().put(Constants.SOFA_RPC_RESULT, ret);\n        exchange.getAttributes().put(Constants.CLIENT_RESPONSE_RESULT_TYPE, ResultEnum.SUCCESS.getName());\n        <span class=\"hljs-keyword\">return</span> ret;\n    })).onErrorMap(SoulException::<span class=\"hljs-keyword\">new</span>);\n}\n</code></pre>\n","categories":[],"tags":[{"name":"SOUL","path":"api/tags/SOUL.json"}]}