{"title":"soul_gateway_src_code_learning_05","slug":"soul-gateway-src-code-learning-05","date":"2021-01-19T16:03:36.000Z","updated":"2021-01-20T16:59:42.478Z","comments":true,"excerpt":"","content":"<h3 id=\"SOUL-Spring-Cloud-demo\"><a href=\"#SOUL-Spring-Cloud-demo\" class=\"headerlink\" title=\"SOUL Spring Cloud demo\"></a>SOUL Spring Cloud demo</h3><p>拉了下代码,使用了当前使用 249fb1ff8711e7b531f56f89bae9650d7fb4def6 版本</p>\n<p>有了上一节的经验</p>\n<p>打开bootstrap pom中的 springcloud 和 eureka 依赖</p>\n\n    <pre><code class=\"lang-xml\"><span class=\"xml\"><span class=\"hljs-comment\">&lt;!--soul springCloud plugin start--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.dromara<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>soul-spring-boot-starter-plugin-springcloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>$</span><span class=\"hljs-template-variable\">{project.version}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-commons<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</span></code></pre>\n<p>同时打开soul-bootstrap/src/main/resources/application-local.yml, 去掉eureka配置部分的注释 </p>\n\n    <pre><code class=\"lang-yaml\"><span class=\"hljs-attr\">eureka:</span>\n<span class=\"hljs-attr\">  client:</span>\n<span class=\"hljs-attr\">    serviceUrl:</span>\n<span class=\"hljs-attr\">      defaultZone:</span> <span class=\"hljs-attr\">http://localhost:8761/eureka/</span>\n<span class=\"hljs-attr\">  instance:</span>\n<span class=\"hljs-attr\">    prefer-ip-address:</span> <span class=\"hljs-literal\">true</span>\n</code></pre>\n<p>重启bootstrap log中可以看到springcloud plugin被加载了</p>\n\n    <pre><code class=\"lang-bash\"><span class=\"hljs-number\">2021</span>-<span class=\"hljs-number\">01</span>-<span class=\"hljs-number\">20</span> <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">20</span>:<span class=\"hljs-number\">53.274</span>  INFO <span class=\"hljs-number\">90869</span> --- [           main] o<span class=\"hljs-selector-class\">.d</span><span class=\"hljs-selector-class\">.s</span><span class=\"hljs-selector-class\">.w</span><span class=\"hljs-selector-class\">.configuration</span><span class=\"hljs-selector-class\">.SoulConfiguration</span>  : load plugin:[springCloud] [org<span class=\"hljs-selector-class\">.dromara</span><span class=\"hljs-selector-class\">.soul</span><span class=\"hljs-selector-class\">.plugin</span><span class=\"hljs-selector-class\">.springcloud</span><span class=\"hljs-selector-class\">.SpringCloudPlugin</span>]\n</code></pre>\n<p>soul-examples-springcloud使用eureka作为服务发现, 我们先启动 soul-examples/soul-examples-eureka/src/main/java/org/dromara/soul/examples/eureka/EurekaServerApplication.java</p>\n<p>和上一节的一样, 使用Spring Cloud插件, 访问 <a href=\"http://127.0.0.1:9095/#/system/plugin\" target=\"_blank\" rel=\"external\">http://127.0.0.1:9095/#/system/plugin</a> 可以看到 springCloud plugin 是关闭的, 点击editor </p>\n<p>开启springCloud plugin</p>\n<p>同样可以看到之前启动 soul-examples-http, soul-examples-dubbo 时的类似log, 显然spring cloud的服务也注册到了soul</p>\n\n    <pre><code class=\"lang-bash\">2021-01-20 00:23:16.972  <span class=\"hljs-builtin-name\">INFO</span> 90924 --- [pool-1-thread-1] o.d.s.client.common.utils.RegisterUtils  : springCloud<span class=\"hljs-built_in\"> client </span>register success: {<span class=\"hljs-string\">\"appName\"</span>:<span class=\"hljs-string\">\"springCloud-test\"</span>,<span class=\"hljs-string\">\"context\"</span>:<span class=\"hljs-string\">\"/springcloud\"</span>,<span class=\"hljs-string\">\"path\"</span>:<span class=\"hljs-string\">\"/springcloud/order/save\"</span>,<span class=\"hljs-string\">\"pathDesc\"</span>:<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"rpcType\"</span>:<span class=\"hljs-string\">\"springCloud\"</span>,<span class=\"hljs-string\">\"ruleName\"</span>:<span class=\"hljs-string\">\"/springcloud/order/save\"</span>,<span class=\"hljs-string\">\"enabled\"</span>:true} \n2021-01-20 00:23:16.987  <span class=\"hljs-builtin-name\">INFO</span> 90924 --- [pool-1-thread-1] o.d.s.client.common.utils.RegisterUtils  : springCloud<span class=\"hljs-built_in\"> client </span>register success: {<span class=\"hljs-string\">\"appName\"</span>:<span class=\"hljs-string\">\"springCloud-test\"</span>,<span class=\"hljs-string\">\"context\"</span>:<span class=\"hljs-string\">\"/springcloud\"</span>,<span class=\"hljs-string\">\"path\"</span>:<span class=\"hljs-string\">\"/springcloud/order/findById\"</span>,<span class=\"hljs-string\">\"pathDesc\"</span>:<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"rpcType\"</span>:<span class=\"hljs-string\">\"springCloud\"</span>,<span class=\"hljs-string\">\"ruleName\"</span>:<span class=\"hljs-string\">\"/springcloud/order/findById\"</span>,<span class=\"hljs-string\">\"enabled\"</span>:true} \n2021-01-20 00:23:17.003  <span class=\"hljs-builtin-name\">INFO</span> 90924 --- [pool-1-thread-1] o.d.s.client.common.utils.RegisterUtils  : springCloud<span class=\"hljs-built_in\"> client </span>register success: {<span class=\"hljs-string\">\"appName\"</span>:<span class=\"hljs-string\">\"springCloud-test\"</span>,<span class=\"hljs-string\">\"context\"</span>:<span class=\"hljs-string\">\"/springcloud\"</span>,<span class=\"hljs-string\">\"path\"</span>:<span class=\"hljs-string\">\"/springcloud/order/path/**\"</span>,<span class=\"hljs-string\">\"pathDesc\"</span>:<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"rpcType\"</span>:<span class=\"hljs-string\">\"springCloud\"</span>,<span class=\"hljs-string\">\"ruleName\"</span>:<span class=\"hljs-string\">\"/springcloud/order/path/**\"</span>,<span class=\"hljs-string\">\"enabled\"</span>:true} \n2021-01-20 00:23:17.017  <span class=\"hljs-builtin-name\">INFO</span> 90924 --- [pool-1-thread-1] o.d.s.client.common.utils.RegisterUtils  : springCloud<span class=\"hljs-built_in\"> client </span>register success: {<span class=\"hljs-string\">\"appName\"</span>:<span class=\"hljs-string\">\"springCloud-test\"</span>,<span class=\"hljs-string\">\"context\"</span>:<span class=\"hljs-string\">\"/springcloud\"</span>,<span class=\"hljs-string\">\"path\"</span>:<span class=\"hljs-string\">\"/springcloud/order/path/**/name\"</span>,<span class=\"hljs-string\">\"pathDesc\"</span>:<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"rpcType\"</span>:<span class=\"hljs-string\">\"springCloud\"</span>,<span class=\"hljs-string\">\"ruleName\"</span>:<span class=\"hljs-string\">\"/springcloud/order/path/**/name\"</span>,<span class=\"hljs-string\">\"enabled\"</span>:true}\n</code></pre>\n<p>访问 <a href=\"http://127.0.0.1:9095/#/plug/springCloud\" target=\"_blank\" rel=\"external\">http://127.0.0.1:9095/#/plug/springCloud</a> 同样可以看到 刚起的实例服务注册了rule 和selector 到了soul上</p>\n<p><img src=\"/2021/01/20/soul-gateway-src-code-learning-05/00springcloud_plugin_log.png\" alt=\"img\"></p>\n<p> 直接访问 spring cloud 服务</p>\n\n    <pre><code class=\"lang-bash\"><span class=\"hljs-variable\">$curl</span> http:<span class=\"hljs-regexp\">//</span>localhost:<span class=\"hljs-number\">8884</span><span class=\"hljs-regexp\">/order/</span>findById\\?id\\=<span class=\"hljs-number\">3</span>\n{<span class=\"hljs-string\">\"id\"</span>:<span class=\"hljs-string\">\"3\"</span>,<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"hello world spring cloud findById\"</span>}%\n</code></pre>\n<p>正常</p>\n<p>尝试通过网关访问 spring cloud 服务</p>\n\n    <pre><code class=\"lang-bash\"><span class=\"hljs-variable\">$curl</span> <span class=\"hljs-symbol\">http:</span>/<span class=\"hljs-regexp\">/localhost:9195/springcloud</span><span class=\"hljs-regexp\">/order/find</span>ById\\?id=<span class=\"hljs-number\">3</span>\n{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"3\"</span></span>,<span class=\"hljs-string\">\"name\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"hello world spring cloud findById\"</span></span>}%\n</code></pre>\n<p>转发请求的核心逻辑在 soul-plugin/soul-plugin-springcloud/src/main/java/org/dromara/soul/plugin/springcloud/SpringCloudPlugin.java#doExecute</p>\n\n    <pre><code class=\"lang-java\"><span class=\"hljs-comment\">// 这里通过封装的serviceId 通过 loadBalancer 来找到服务的实例</span>\n<span class=\"hljs-keyword\">final</span> ServiceInstance serviceInstance = loadBalancer.choose(selectorHandle.getServiceId());\n<span class=\"hljs-comment\">//serviceInstance的值得如下 RibbonServer{serviceId='springCloud-test', server=ip:8884, secure=false, metadata={management.port=8884}},后面就根据真实地址去请求了</span>\n        <span class=\"hljs-keyword\">if</span> (Objects.isNull(serviceInstance)) {\n            Object <span class=\"hljs-keyword\">error</span> = SoulResultWrap.<span class=\"hljs-keyword\">error</span>(SoulResultEnum.SPRINGCLOUD_SERVICEID_IS_ERROR.getCode(), SoulResultEnum.SPRINGCLOUD_SERVICEID_IS_ERROR.getMsg(), <span class=\"hljs-keyword\">null</span>);\n            <span class=\"hljs-function\"><span class=\"hljs-keyword\">return</span> WebFluxResultUtils.<span class=\"hljs-title\">result</span><span class=\"hljs-params\">(exchange, <span class=\"hljs-keyword\">error</span>)</span></span>;\n        }\n</code></pre>\n","categories":[],"tags":[{"name":"SOUL","path":"api/tags/SOUL.json"}]}